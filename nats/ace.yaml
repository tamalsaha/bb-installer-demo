---
# Source: ace/charts/ingress-nginx/templates/controller-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    helm.sh/chart: ingress-nginx-4.1.0
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.2.0"
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
  name: release-name-ingress-nginx
  namespace: default
automountServiceAccountToken: true
---
# Source: ace/charts/nats/templates/rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-nats
  labels:
    helm.sh/chart: nats-0.17.0
    app.kubernetes.io/name: nats
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.8.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: ace/templates/cache/cache-auth.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-ace-cache-auth
  namespace: default
  labels:
    helm.sh/chart: ace-v2022.06.14
    app.kubernetes.io/version: "v2022.06.09.1"
    app.kubernetes.io/component: database
    app.kubernetes.io/instance: release-name-ace-cache
    app.kubernetes.io/managed-by: kubedb.com
    app.kubernetes.io/name: redises.kubedb.com
type: kubernetes.io/basic-auth
stringData:
  username: 'root'
  password: 'uaJOi1mKLpy5fT8l'
---
# Source: ace/templates/db/db-auth.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-ace-db-auth
  namespace: default
  labels:
    helm.sh/chart: ace-v2022.06.14
    app.kubernetes.io/version: "v2022.06.09.1"
    app.kubernetes.io/component: database
    app.kubernetes.io/instance: release-name-ace-db
    app.kubernetes.io/managed-by: kubedb.com
    app.kubernetes.io/name: postgreses.kubedb.com
type: kubernetes.io/basic-auth
stringData:
  username: 'postgres'
  password: 'bUQ;kJ~gXW08(x(S'
---
# Source: ace/templates/db/db-config.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-ace-db-config
  namespace: default
  labels:
    helm.sh/chart: ace-v2022.06.14
    app.kubernetes.io/version: "v2022.06.09.1"
    app.kubernetes.io/component: database
    app.kubernetes.io/instance: release-name-ace-db
    app.kubernetes.io/managed-by: kubedb.com
    app.kubernetes.io/name: postgreses.kubedb.com
type: Opaque
stringData:
  user.conf: |
    max_connections=110
    # shared_buffers=258MB
---
# Source: ace/templates/db/init-script.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-ace-db-init-script
  namespace: default
  labels:
    helm.sh/chart: ace-v2022.06.14
    app.kubernetes.io/version: "v2022.06.09.1"
    app.kubernetes.io/component: database
    app.kubernetes.io/instance: release-name-ace-db
    app.kubernetes.io/managed-by: kubedb.com
    app.kubernetes.io/name: postgreses.kubedb.com
type: Opaque
stringData:
  data.sql: |
     CREATE DATABASE ace;
---
# Source: ace/templates/grafana/grafana-config.yaml
kind: Secret
apiVersion: v1
metadata:
  name: release-name-ace-grafana-config
  namespace: default
  labels:
    helm.sh/chart: ace-v2022.06.14
    app.kubernetes.io/name: ace
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v2022.06.09.1"
    app.kubernetes.io/managed-by: Helm
stringData:
  defaults.ini: |-
    ##################### Grafana Configuration Defaults #####################
    #
    # Do not modify this file in grafana installs
    #

    # possible values : production, development
    app_mode = production

    # instance name, defaults to HOSTNAME environment variable value or hostname if HOSTNAME var is empty
    instance_name = ${HOSTNAME}

    #################################### Paths ###############################
    [paths]
    # Path to where grafana can store temp files, sessions, and the sqlite3 db (if that is used)
    data = data

    # Temporary files in `data` directory older than given duration will be removed
    temp_data_lifetime = 24h

    # Directory where grafana can store logs
    logs = data/log

    # Directory where grafana will automatically scan and look for plugins
    plugins = data/plugins

    # folder that contains provisioning config files that grafana will apply on startup and while running.
    provisioning = conf/provisioning

    #################################### Server ##############################
    [server]
    # Protocol (http, https, socket)
    protocol = http

    # The ip address to bind to, empty will bind to all interfaces
    http_addr =

    # The http port to use
    http_port = 3005

    # The public facing domain name used to access grafana from a browser
    domain = localhost

    # Redirect to correct domain if host header does not match domain
    # Prevents DNS rebinding attacks
    enforce_domain = false

    # The full public facing url
    root_url = %(protocol)s://%(domain)s:%(http_port)s/

    # Log web requests
    router_logging = false

    # the path relative working path
    static_root_path = public

    # enable gzip
    enable_gzip = false

    # https certs & key file
    cert_file =
    cert_key =

    # Unix socket path
    socket = /tmp/grafana.sock

    #################################### Database ############################
    [database]
    # You can configure the database connection by specifying type, host, name, user and password
    # as separate properties or as on string using the url property.

    # Either "mysql", "postgres" or "sqlite3", it's your choice
    type = postgres
    host = release-name-ace-db.default:5432
    name = ace
    user = postgres
    # If the password contains # or ; you have to wrap it with triple quotes. Ex """#password;"""
    password = bUQ;kJ~gXW08(x(S
    # Use either URL or the previous fields to configure the database
    # Example: mysql://user:secret@host:port/database
    url =

    skip_migrations = false

    # Max idle conn setting default is 2
    max_idle_conn = 2

    # Max conn setting default is 0 (mean not set)
    max_open_conn =

    # Connection Max Lifetime default is 14400 (means 14400 seconds or 4 hours)
    conn_max_lifetime = 14400

    # Set to true to log the sql calls and execution times.
    log_queries =

    # For "postgres", use either "disable", "require" or "verify-full"
    # For "mysql", use either "true", "false", or "skip-verify".
    ssl_mode = disable

    # Database drivers may support different transaction isolation levels.
    # Currently, only "mysql" driver supports isolation levels.
    # If the value is empty - driver's default isolation level is applied.
    # For "mysql" use "READ-UNCOMMITTED", "READ-COMMITTED", "REPEATABLE-READ" or "SERIALIZABLE".
    isolation_level =

    ca_cert_path =
    client_key_path =
    client_cert_path =
    server_cert_name =

    # For "sqlite3" only, path relative to data_path setting
    path = grafana.db

    # For "sqlite3" only. cache mode setting used for connecting to the database
    cache_mode = private

    #################################### Cache server #############################
    [remote_cache]
    # Either "redis", "memcached" or "database" default is "database"
    type = redis

    # cache connectionstring options
    # database: will use Grafana primary database.
    # redis: config like redis server e.g. `addr=127.0.0.1:6379,pool_size=100,db=grafana`
    # memcache: 127.0.0.1:11211
    connstr = addr=release-name-ace-cache.default:6379,password='uaJOi1mKLpy5fT8l',db=1,pool_size=100

    #################################### Session #############################
    [session]
    # Either "memory", "file", "redis", "mysql", "postgres", "memcache", default is "file"
    provider = redis

    # Provider config options
    # memory: not have any config yet
    # file: session dir path, is relative to grafana data_path
    # redis: config like redis server e.g. `addr=127.0.0.1:6379,pool_size=100,db=grafana`
    # postgres: user=a password=b host=localhost port=5432 dbname=c sslmode=disable
    # mysql: go-sql-driver/mysql dsn config string, examples:
    #         `user:password@tcp(127.0.0.1:3306)/database_name`
    #         `user:password@unix(/var/run/mysqld/mysqld.sock)/database_name`
    # memcache: 127.0.0.1:11211


    provider_config = addr=release-name-ace-cache.default:6379,password='uaJOi1mKLpy5fT8l',db=0,pool_size=100

    # Session cookie name
    cookie_name = i_like_bytebuilders

    # If you use session in https only, default is false
    cookie_secure = false

    # Session life time, default is 86400
    session_life_time = 86400
    gc_interval_time = 86400

    # Connection Max Lifetime default is 14400 (means 14400 seconds or 4 hours)
    conn_max_lifetime = 14400

    #################################### Data proxy ###########################
    [dataproxy]

    # This enables data proxy logging, default is false
    logging = false

    # How long the data proxy should wait before timing out default is 30 (seconds)
    timeout = 30

    # If enabled and user is not anonymous, data proxy will add X-Grafana-User header with username into the request, default is false.
    send_user_header = false

    #################################### Analytics ###########################
    [analytics]
    # Server reporting, sends usage counters to stats.grafana.org every 24 hours.
    # No ip addresses are being tracked, only simple counters to track
    # running instances, dashboard and error counts. It is very helpful to us.
    # Change this option to false to disable reporting.
    reporting_enabled = false

    # The name of the distributor of the Grafana instance. Ex hosted-grafana, grafana-labs
    reporting_distributor = AppsCode Inc.


    # Set to false to disable all checks to https://grafana.com
    # for new versions (grafana itself and plugins), check is used
    # in some UI views to notify that grafana or plugin update exists
    # This option does not cause any auto updates, nor send any information
    # only a GET request to https://grafana.com to get latest versions
    check_for_updates = false

    # Google Analytics universal tracking code, only enabled if you specify an id here
    google_analytics_ua_id =

    # Google Tag Manager ID, only enabled if you specify an id here
    google_tag_manager_id =

    #################################### Security ############################
    [security]
    # disable creation of admin user on first start of grafana
    disable_initial_admin_creation = true
    # default admin user, created on startup
    admin_user = admin

    # default admin password, can be changed before first start of grafana, or in profile settings
    admin_password = admin

    # used for signing
    secret_key = 4nHrUDNw00AjlhAq8hCGYPxBt6I1UCbmdC5ReY19IPWdy8qFDzTZzXkdCr5d6qwP

    # disable gravatar profile images
    disable_gravatar = false

    # data source proxy whitelist (ip_or_domain:port separated by spaces)
    data_source_proxy_whitelist =

    # disable protection against brute force login attempts
    disable_brute_force_login_protection = false

    # set to true if you host Grafana behind HTTPS. default is false.
    cookie_secure = false

    # set cookie SameSite attribute. defaults to `lax`. can be set to "lax", "strict" and "none"
    cookie_samesite = lax

    # set to true if you want to allow browsers to render Grafana in a <frame>, <iframe>, <embed> or <object>. default is false.
    allow_embedding = true


    #################################### Snapshots ###########################
    [snapshots]
    # snapshot sharing options
    external_enabled = true
    external_snapshot_url = https://snapshots-origin.raintank.io
    external_snapshot_name = Publish to snapshot.raintank.io

    # remove expired snapshot
    snapshot_remove_expired = true

    #################################### Dashboards ##################

    [dashboards]
    # Number dashboard versions to keep (per dashboard). Default: 20, Minimum: 1
    versions_to_keep = 20
    # Minimum dashboard refresh interval. When set, this will restrict users to set the refresh interval of a dashboard lower than given interval. Per default this is 5 seconds.
    # The interval string is a possibly signed sequence of decimal numbers, followed by a unit suffix (ms, s, m, h, d), e.g. 30s or 1m.
    min_refresh_interval = 5s
    # Path to the default home dashboard. If this value is empty, then Grafana uses StaticRootPath + "dashboards/home.json"
    default_home_dashboard_path =
    ################################### Data sources #########################
    [datasources]
    # Upper limit of data sources that Grafana will return. This limit is a temporary configuration and it will be deprecated when pagination will be introduced on the list data sources API.
    datasource_limit = 5000
    #################################### Users ###############################
    [users]
    # disable user signup / registration
    allow_sign_up = false

    # Allow non admin users to create organizations
    allow_org_create = false

    # Set to true to automatically assign new users to the default organization (id 1)
    auto_assign_org = false

    # Set this value to automatically add new users to the provided organization (if auto_assign_org above is set to true)
    auto_assign_org_id = 1

    # Default role new users will be automatically assigned (if auto_assign_org above is set to true)
    auto_assign_org_role = Viewer

    # Require email validation before sign up completes
    verify_email_enabled = false

    # Background text for the user field on the login page
    login_hint = email or username
    password_hint = password

    # Default UI theme ("dark" or "light")
    default_theme = dark

    # External user management
    external_manage_link_url =
    external_manage_link_name =
    external_manage_info =

    # Viewers can edit/inspect dashboard settings in the browser. But not save the dashboard.
    viewers_can_edit = false

    # Editors can administrate dashboard, folders and teams they create
    editors_can_admin = false

    [auth]
    # Login cookie name
    login_cookie_name = grafana_session

    # The lifetime (days) an authenticated user can be inactive before being required to login at next visit. Default is 7 days.
    login_maximum_inactive_lifetime_days = 7

    # The maximum lifetime (days) an authenticated user can be logged in since login time before being required to login. Default is 30 days.
    login_maximum_lifetime_days = 30

    # How often should auth tokens be rotated for authenticated users when being active. The default is each 10 minutes.
    token_rotation_interval_minutes = 10

    # Set to true to disable (hide) the login form, useful if you use OAuth
    disable_login_form = false

    # Set to true to disable the signout link in the side menu. useful if you use auth.proxy
    disable_signout_menu = false

    # URL to redirect the user to after sign out
    signout_redirect_url =

    # Set to true to attempt login with OAuth automatically, skipping the login screen.
    # This setting is ignored if multiple OAuth providers are configured.
    oauth_auto_login = false
    # OAuth state max age cookie duration in seconds. Defaults to 600 seconds.

    oauth_state_cookie_max_age = 600
    # limit of api_key seconds to live before expiration
    api_key_max_seconds_to_live = -1
    # Set to true to enable SigV4 authentication option for HTTP-based datasources
    sigv4_auth_enabled = false


    #################################### Anonymous Auth ######################
    [auth.anonymous]
    # enable anonymous access
    enabled = false

    # specify organization name that should be used for unauthenticated users
    org_name = Main Org.

    # specify role for unauthenticated users
    org_role = Viewer

    # mask the Grafana version number for unauthenticated users
    hide_version = false

    #################################### Github Auth #########################
    [auth.github]
    enabled = false
    allow_sign_up = true
    client_id = some_id
    client_secret = some_secret
    scopes = user:email,read:org
    auth_url = https://github.com/login/oauth/authorize
    token_url = https://github.com/login/oauth/access_token
    api_url = https://api.github.com/user
    team_ids =
    allowed_organizations =

    #################################### GitLab Auth #########################
    [auth.gitlab]
    enabled = false
    allow_sign_up = true
    client_id = some_id
    client_secret = some_secret
    scopes = api
    auth_url = https://gitlab.com/oauth/authorize
    token_url = https://gitlab.com/oauth/token
    api_url = https://gitlab.com/api/v4
    allowed_groups =

    #################################### Google Auth #########################
    [auth.google]
    enabled = false
    allow_sign_up = true
    client_id = some_client_id
    client_secret = some_client_secret
    scopes = https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/userinfo.email
    auth_url = https://accounts.google.com/o/oauth2/auth
    token_url = https://accounts.google.com/o/oauth2/token
    api_url = https://www.googleapis.com/oauth2/v1/userinfo
    allowed_domains =
    hosted_domain =

    #################################### Grafana.com Auth ####################
    # legacy key names (so they work in env variables)
    [auth.grafananet]
    enabled = false
    allow_sign_up = true
    client_id = some_id
    client_secret = some_secret
    scopes = user:email
    allowed_organizations =

    [auth.grafana_com]
    enabled = false
    allow_sign_up = true
    client_id = some_id
    client_secret = some_secret
    scopes = user:email
    allowed_organizations =

    #################################### Generic OAuth #######################
    [auth.generic_oauth]
    name = OAuth
    enabled = false
    allow_sign_up = true
    client_id = some_id
    client_secret = some_secret
    scopes = user:email
    email_attribute_name = email:primary
    auth_url =
    token_url =
    api_url =
    team_ids =
    allowed_organizations =
    tls_skip_verify_insecure = false
    tls_client_cert =
    tls_client_key =
    tls_client_ca =
    send_client_credentials_via_post = false

    #################################### Basic Auth ##########################
    [auth.basic]
    enabled = false

    #################################### Auth Proxy ##########################
    [auth.proxy]
    enabled = false
    header_name = X-WEBAUTH-USER
    header_property = username
    auto_sign_up = true
    ldap_sync_ttl = 60
    whitelist =
    headers =

    #################################### Auth LDAP ###########################
    [auth.ldap]
    enabled = false
    config_file = /etc/grafana/ldap.toml
    allow_sign_up = true

    #################################### SMTP / Emailing #####################
    [smtp]
    enabled = false
    host = localhost:25
    user =
    # If the password contains # or ; you have to wrap it with triple quotes. Ex """#password;"""
    password =
    cert_file =
    key_file =
    skip_verify = false
    from_address = admin@grafana.localhost
    from_name = Grafana
    ehlo_identity =

    [emails]
    welcome_email_on_sign_up = false
    templates_pattern = emails/*.html

    #################################### Logging ##########################
    [log]
    # Either "console", "file", "syslog". Default is console and file
    # Use space to separate multiple modes, e.g. "console file"
    mode = console file

    # Either "debug", "info", "warn", "error", "critical", default is "info"
    level = info

    # optional settings to set different levels for specific loggers. Ex filters = sqlstore:debug
    filters =

    # For "console" mode only
    [log.console]
    level =

    # log line format, valid options are text, console and json
    format = console

    # For "file" mode only
    [log.file]
    level =

    # log line format, valid options are text, console and json
    format = text

    # This enables automated log rotate(switch of following options), default is true
    log_rotate = true

    # Max line number of single file, default is 1000000
    max_lines = 1000000

    # Max size shift of single file, default is 28 means 1 << 28, 256MB
    max_size_shift = 28

    # Segment log daily, default is true
    daily_rotate = true

    # Expired days of log file(delete after max days), default is 7
    max_days = 7

    [log.syslog]
    level =

    # log line format, valid options are text, console and json
    format = text

    # Syslog network type and address. This can be udp, tcp, or unix. If left blank, the default unix endpoints will be used.
    network =
    address =

    # Syslog facility. user, daemon and local0 through local7 are valid.
    facility =

    # Syslog tag. By default, the process' argv[0] is used.
    tag =

    #################################### Usage Quotas ########################
    [quota]
    enabled = false

    #### set quotas to -1 to make unlimited. ####
    # limit number of users per Org.
    org_user = 10

    # limit number of dashboards per Org.
    org_dashboard = 100

    # limit number of data_sources per Org.
    org_data_source = 10

    # limit number of api_keys per Org.
    org_api_key = 10

    # limit number of orgs a user can create.
    user_org = 10

    # Global limit of users.
    global_user = -1

    # global limit of orgs.
    global_org = -1

    # global limit of dashboards
    global_dashboard = -1

    # global limit of api_keys
    global_api_key = -1

    # global limit on number of logged in users.
    global_session = -1

    #################################### Alerting ############################
    [alerting]
    # Disable alerting engine & UI features
    enabled = true
    # Makes it possible to turn off alert rule execution but alerting UI is visible
    execute_alerts = true

    # Default setting for new alert rules. Defaults to categorize error and timeouts as alerting. (alerting, keep_state)
    error_or_timeout = alerting

    # Default setting for how Grafana handles nodata or null values in alerting. (alerting, no_data, keep_state, ok)
    nodata_or_nullvalues = no_data

    # Alert notifications can include images, but rendering many images at the same time can overload the server
    # This limit will protect the server from render overloading and make sure notifications are sent out quickly
    concurrent_render_limit = 5

    #################################### Explore #############################
    [explore]
    # Enable the Explore section
    enabled = true

    #################################### Internal Grafana Metrics ############
    # Metrics available at HTTP API Url /metrics
    [metrics]
    enabled           = true
    interval_seconds  = 10

    #If both are set, basic auth will be required for the metrics endpoint.
    basic_auth_username =
    basic_auth_password =

    # Send internal Grafana metrics to graphite
    [metrics.graphite]
    # Enable by setting the address setting (ex localhost:2003)
    address =
    prefix = prod.grafana.%(instance_name)s.

    [grafana_net]
    url = https://grafana.com

    [grafana_com]
    url = https://grafana.com

    #################################### Distributed tracing ############
    [tracing.jaeger]
    # jaeger destination (ex localhost:6831)
    address =
    # tag that will always be included in when creating new spans. ex (tag1:value1,tag2:value2)
    always_included_tag =
    # Type specifies the type of the sampler: const, probabilistic, rateLimiting, or remote
    sampler_type = const
    # jaeger samplerconfig param
    # for "const" sampler, 0 or 1 for always false/true respectively
    # for "probabilistic" sampler, a probability between 0 and 1
    # for "rateLimiting" sampler, the number of spans per second
    # for "remote" sampler, param is the same as for "probabilistic"
    # and indicates the initial sampling rate before the actual one
    # is received from the mothership
    sampler_param = 1

    #################################### External Image Storage ##############
    [external_image_storage]
    # You can choose between (s3, webdav, gcs, azure_blob, local)
    provider =

    [external_image_storage.s3]
    bucket_url =
    bucket =
    region =
    path =
    access_key =
    secret_key =

    [external_image_storage.webdav]
    url =
    username =
    password =
    public_url =

    [external_image_storage.gcs]
    key_file =
    bucket =
    path =

    [external_image_storage.azure_blob]
    account_name =
    account_key =
    container_name =

    [external_image_storage.local]
    # does not require any configuration

    [rendering]
    # Options to configure a remote HTTP image rendering service, e.g. using https://github.com/grafana/grafana-image-renderer.
    # URL to a remote HTTP image renderer service, e.g. http://localhost:8081/render, will enable Grafana to render panels and dashboards to PNG-images using HTTP requests to an external service.
    server_url =
    # If the remote HTTP image renderer service runs on a different server than the Grafana server you may have to configure this to a URL where Grafana is reachable, e.g. http://grafana.domain/.
    callback_url =
    # Concurrent render request limit affects when the /render HTTP endpoint is used. Rendering many images at the same time can overload the server,
    # which this setting can help protect against by only allowing a certain amount of concurrent requests.
    concurrent_render_request_limit = 30
    [panels]
    # here for to support old env variables, can remove after a few months
    enable_alpha = false
    disable_sanitize_html = false
    [plugins]
    enable_alpha = false
    app_tls_skip_verify_insecure = false
    # Enter a comma-separated list of plugin identifiers to identify plugins that are allowed to be loaded even if they lack a valid signature.
    allow_loading_unsigned_plugins =
    marketplace_url = https://grafana.com/grafana/plugins/
    #################################### Grafana Image Renderer Plugin ##########################
    [plugin.grafana-image-renderer]
    # Instruct headless browser instance to use a default timezone when not provided by Grafana, e.g. when rendering panel image of alert.
    # See ICU’s metaZones.txt (https://cs.chromium.org/chromium/src/third_party/icu/source/data/misc/metaZones.txt) for a list of supported
    # timezone IDs. Fallbacks to TZ environment variable if not set.
    rendering_timezone =
    # Instruct headless browser instance to use a default language when not provided by Grafana, e.g. when rendering panel image of alert.
    # Please refer to the HTTP header Accept-Language to understand how to format this value, e.g. 'fr-CH, fr;q=0.9, en;q=0.8, de;q=0.7, *;q=0.5'.
    rendering_language =
    # Instruct headless browser instance to use a default device scale factor when not provided by Grafana, e.g. when rendering panel image of alert.
    # Default is 1. Using a higher value will produce more detailed images (higher DPI), but will require more disk space to store an image.
    rendering_viewport_device_scale_factor =
    # Instruct headless browser instance whether to ignore HTTPS errors during navigation. Per default HTTPS errors are not ignored. Due to
    # the security risk it's not recommended to ignore HTTPS errors.
    rendering_ignore_https_errors =
    # Instruct headless browser instance whether to capture and log verbose information when rendering an image. Default is false and will
    # only capture and log error messages. When enabled, debug messages are captured and logged as well.
    # For the verbose information to be included in the Grafana server log you have to adjust the rendering log level to debug, configure
    # [log].filter = rendering:debug.
    rendering_verbose_logging =
    # Instruct headless browser instance whether to output its debug and error messages into running process of remote rendering service.
    # Default is false. This can be useful to enable (true) when troubleshooting.
    rendering_dumpio =
    # Additional arguments to pass to the headless browser instance. Default is --no-sandbox. The list of Chromium flags can be found
    # here (https://peter.sh/experiments/chromium-command-line-switches/). Multiple arguments is separated with comma-character.
    rendering_args =
    # You can configure the plugin to use a different browser binary instead of the pre-packaged version of Chromium.
    # Please note that this is not recommended, since you may encounter problems if the installed version of Chrome/Chromium is not
    # compatible with the plugin.
    rendering_chrome_bin =
    # Instruct how headless browser instances are created. Default is 'default' and will create a new browser instance on each request.
    # Mode 'clustered' will make sure that only a maximum of browsers/incognito pages can execute concurrently.
    # Mode 'reusable' will have one browser instance and will create a new incognito page on each request.
    rendering_mode =
    # When rendering_mode = clustered you can instruct how many browsers or incognito pages can execute concurrently. Default is 'browser'
    # and will cluster using browser instances.
    # Mode 'context' will cluster using incognito pages.
    rendering_clustering_mode =
    # When rendering_mode = clustered you can define maximum number of browser instances/incognito pages that can execute concurrently..
    rendering_clustering_max_concurrency =
    # Limit the maximum viewport width, height and device scale factor that can be requested.
    rendering_viewport_max_width =
    rendering_viewport_max_height =
    rendering_viewport_max_device_scale_factor =
    # Change the listening host and port of the gRPC server. Default host is 127.0.0.1 and default port is 0 and will automatically assign
    # a port not in use.
    grpc_host =
    grpc_port =

    [enterprise]
    license_path =

    [feature_toggles]
    # enable features, separated by spaces
    enable =
    [date_formats]
    # For information on what formatting patterns that are supported https://momentjs.com/docs/#/displaying/
    # Default system date format used in time range picker and other places where full time is displayed
    full_date = YYYY-MM-DD HH:mm:ss
    # Used by graph and other places where we only show small intervals
    interval_second = HH:mm:ss
    interval_minute = HH:mm
    interval_hour = MM/DD HH:mm
    interval_day = MM/DD
    interval_month = YYYY-MM
    interval_year = YYYY
    # Experimental feature
    use_browser_locale = false
    # Default timezone for user preferences. Options are 'browser' for the browser local timezone or a timezone name from IANA Time Zone database, e.g. 'UTC' or 'Europe/Amsterdam' etc.
    default_timezone = browser
    [expressions]
    # Enable or disable the expressions functionality.
    enabled = true
---
# Source: ace/templates/ingress/dns-cred.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-ace-dns-cred
  namespace: default
  labels:
    helm.sh/chart: ace-v2022.06.14
    app.kubernetes.io/name: ace
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v2022.06.09.1"
    app.kubernetes.io/managed-by: Helm
type: Opaque
stringData:
---
# Source: ace/templates/nats/nats-cred.yaml
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: release-name-ace-nats-cred
  namespace: default
  labels:
    helm.sh/chart: ace-v2022.06.14
    app.kubernetes.io/name: ace
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v2022.06.09.1"
    app.kubernetes.io/managed-by: Helm
stringData:
  Operator.creds: |
    -----BEGIN NATS OPERATOR JWT-----
    eyJ0eXAiOiJKV1QiLCJhbGciOiJlZDI1NTE5LW5rZXkifQ.eyJhdWQiOiJPQUVUT05EN1g1TkQySlBaNEFZVjRQTE9OWFBZR0NBSkFFR1dMN1EyQTMySkZHVU5XRzdWSU1CSCIsImV4cCI6NDgxMTQzMjI3OSwianRpIjoiM1JIUFpTNkZLWkZKSFUzU05aM0dRUVc3UEVSSFdUN0NYTFVRNTZEUFlSQ0RBRlM3QkIyQSIsImlhdCI6MTY1NTc1ODY3OSwiaXNzIjoiT0FFVE9ORDdYNU5EMkpQWjRBWVY0UExPTlhQWUdDQUpBRUdXTDdRMkEzMkpGR1VOV0c3VklNQkgiLCJuYW1lIjoiT3BlcmF0b3IiLCJuYmYiOjE2NTU3NTg2NzksInN1YiI6Ik9BRVRPTkQ3WDVORDJKUFo0QVlWNFBMT05YUFlHQ0FKQUVHV0w3UTJBMzJKRkdVTldHN1ZJTUJIIiwibmF0cyI6eyJzaWduaW5nX2tleXMiOlsiT0FFVE9ORDdYNU5EMkpQWjRBWVY0UExPTlhQWUdDQUpBRUdXTDdRMkEzMkpGR1VOV0c3VklNQkgiXSwidHlwZSI6Im9wZXJhdG9yIiwidmVyc2lvbiI6Mn19.5446s14XaHm9y2NbVy6mtVA5O1LA0gfoKRCkSKTJQNvxzb_YjiQ_sTBfSkDOhHB524lt86pzHuAyJL99NXIMAg
    ------END NATS OPERATOR JWT------
    
    ************************* IMPORTANT *************************
    NKEY Seed printed below can be used to sign and prove identity.
    NKEYs are sensitive and should be treated as secrets.
    
    -----BEGIN OPERATOR NKEY SEED-----
    SOAEPUDNZPHAJX4VT45K4YX5PEF3MQBAERPOONRXTMIQNHWZ5RDJUSFRWI
    ------END OPERATOR NKEY SEED------
    
    *************************************************************
    
  Operator.jwt: eyJ0eXAiOiJKV1QiLCJhbGciOiJlZDI1NTE5LW5rZXkifQ.eyJhdWQiOiJPQUVUT05EN1g1TkQySlBaNEFZVjRQTE9OWFBZR0NBSkFFR1dMN1EyQTMySkZHVU5XRzdWSU1CSCIsImV4cCI6NDgxMTQzMjI3OSwianRpIjoiM1JIUFpTNkZLWkZKSFUzU05aM0dRUVc3UEVSSFdUN0NYTFVRNTZEUFlSQ0RBRlM3QkIyQSIsImlhdCI6MTY1NTc1ODY3OSwiaXNzIjoiT0FFVE9ORDdYNU5EMkpQWjRBWVY0UExPTlhQWUdDQUpBRUdXTDdRMkEzMkpGR1VOV0c3VklNQkgiLCJuYW1lIjoiT3BlcmF0b3IiLCJuYmYiOjE2NTU3NTg2NzksInN1YiI6Ik9BRVRPTkQ3WDVORDJKUFo0QVlWNFBMT05YUFlHQ0FKQUVHV0w3UTJBMzJKRkdVTldHN1ZJTUJIIiwibmF0cyI6eyJzaWduaW5nX2tleXMiOlsiT0FFVE9ORDdYNU5EMkpQWjRBWVY0UExPTlhQWUdDQUpBRUdXTDdRMkEzMkpGR1VOV0c3VklNQkgiXSwidHlwZSI6Im9wZXJhdG9yIiwidmVyc2lvbiI6Mn19.5446s14XaHm9y2NbVy6mtVA5O1LA0gfoKRCkSKTJQNvxzb_YjiQ_sTBfSkDOhHB524lt86pzHuAyJL99NXIMAg
  SYS.creds: |
    -----BEGIN NATS ACCOUNT JWT-----
    eyJ0eXAiOiJKV1QiLCJhbGciOiJlZDI1NTE5LW5rZXkifQ.eyJqdGkiOiJNTDNVNFVQVEtESVRFTFlGQkhTMjVTMkpFSTZVVUlQRVpXV0hPWjU2Q01NVVlUNlpFUUpBIiwiaWF0IjoxNjU1NzU4Njc5LCJpc3MiOiJPQUVUT05EN1g1TkQySlBaNEFZVjRQTE9OWFBZR0NBSkFFR1dMN1EyQTMySkZHVU5XRzdWSU1CSCIsIm5hbWUiOiJTWVMiLCJzdWIiOiJBQkRENlJMU0NFSlFBWVlHQktUTjRXN0tMTlpOV1NFS05GQ1ZOUFAzTUVETjdIS0pKVUJXQVlXNSIsIm5hdHMiOnsibGltaXRzIjp7InN1YnMiOi0xLCJkYXRhIjotMSwicGF5bG9hZCI6LTEsImltcG9ydHMiOi0xLCJleHBvcnRzIjotMSwid2lsZGNhcmRzIjp0cnVlLCJjb25uIjotMSwibGVhZiI6LTF9LCJkZWZhdWx0X3Blcm1pc3Npb25zIjp7InB1YiI6e30sInN1YiI6e319LCJ0eXBlIjoiYWNjb3VudCIsInZlcnNpb24iOjJ9fQ.25iUkX54T_2dnKcv6BbQPmF6NgMgTH1a5xAP8KT47fXbmLazqFd3UKOB27l4AkzvcD2WybhmszG7yP8pUZRwAQ
    ------END NATS ACCOUNT JWT------
    
    ************************* IMPORTANT *************************
    NKEY Seed printed below can be used to sign and prove identity.
    NKEYs are sensitive and should be treated as secrets.
    
    -----BEGIN ACCOUNT NKEY SEED-----
    SAADTQXV6FBXDAM3VNB63G6NHW75MJT2IG37B6KQXQKOCYLQLZZVZZYQS4
    ------END ACCOUNT NKEY SEED------
    
    *************************************************************
    
  SYS.jwt: eyJ0eXAiOiJKV1QiLCJhbGciOiJlZDI1NTE5LW5rZXkifQ.eyJqdGkiOiJNTDNVNFVQVEtESVRFTFlGQkhTMjVTMkpFSTZVVUlQRVpXV0hPWjU2Q01NVVlUNlpFUUpBIiwiaWF0IjoxNjU1NzU4Njc5LCJpc3MiOiJPQUVUT05EN1g1TkQySlBaNEFZVjRQTE9OWFBZR0NBSkFFR1dMN1EyQTMySkZHVU5XRzdWSU1CSCIsIm5hbWUiOiJTWVMiLCJzdWIiOiJBQkRENlJMU0NFSlFBWVlHQktUTjRXN0tMTlpOV1NFS05GQ1ZOUFAzTUVETjdIS0pKVUJXQVlXNSIsIm5hdHMiOnsibGltaXRzIjp7InN1YnMiOi0xLCJkYXRhIjotMSwicGF5bG9hZCI6LTEsImltcG9ydHMiOi0xLCJleHBvcnRzIjotMSwid2lsZGNhcmRzIjp0cnVlLCJjb25uIjotMSwibGVhZiI6LTF9LCJkZWZhdWx0X3Blcm1pc3Npb25zIjp7InB1YiI6e30sInN1YiI6e319LCJ0eXBlIjoiYWNjb3VudCIsInZlcnNpb24iOjJ9fQ.25iUkX54T_2dnKcv6BbQPmF6NgMgTH1a5xAP8KT47fXbmLazqFd3UKOB27l4AkzvcD2WybhmszG7yP8pUZRwAQ
  sys.creds: |
    -----BEGIN NATS USER JWT-----
    eyJ0eXAiOiJKV1QiLCJhbGciOiJlZDI1NTE5LW5rZXkifQ.eyJqdGkiOiJZQks3VU5YS05OUlc1MlY2V0VFWVc3SkVOMlRZNkFUTTZQNVE2WlJNUDNKNFczNEVJNU9RIiwiaWF0IjoxNjU1NzU4Njc5LCJpc3MiOiJBQkRENlJMU0NFSlFBWVlHQktUTjRXN0tMTlpOV1NFS05GQ1ZOUFAzTUVETjdIS0pKVUJXQVlXNSIsIm5hbWUiOiJzeXMiLCJzdWIiOiJVRFRHTUxZNk5DNzY3VjJHUkVZV1YySVBGMlo0SlFNUVpLSlRLSE9CV0ZQRVA2VVU1NzIyVTJURiIsIm5hdHMiOnsicHViIjp7fSwic3ViIjp7fSwic3VicyI6LTEsImRhdGEiOi0xLCJwYXlsb2FkIjotMSwidHlwZSI6InVzZXIiLCJ2ZXJzaW9uIjoyfX0.Ge6VZrtMohJ0B5yr6xvxYQ1ogc2ZMZCSQ9MtDPHjRBDELyF6zzQ7_mtAKf-pWM7YpxWMOuhp0PQsfOLtXs6BCw
    ------END NATS USER JWT------
    
    ************************* IMPORTANT *************************
    NKEY Seed printed below can be used to sign and prove identity.
    NKEYs are sensitive and should be treated as secrets.
    
    -----BEGIN USER NKEY SEED-----
    SUAOXA755BEN5OYOC3ER5K6URLIQKS77IJXPYDRPNUDOGW74HPMW64AYBY
    ------END USER NKEY SEED------
    
    *************************************************************
    
  ADMIN.creds: |
    -----BEGIN NATS ACCOUNT JWT-----
    eyJ0eXAiOiJKV1QiLCJhbGciOiJlZDI1NTE5LW5rZXkifQ.eyJqdGkiOiJQTEVZNEFWMjVIRFNXNlJYV1RUQ0xIUlRJM0E3Wk4zSk5WR00zN0gzWDVXSVlFWExUVEdBIiwiaWF0IjoxNjU1NzU4Njc5LCJpc3MiOiJPQUVUT05EN1g1TkQySlBaNEFZVjRQTE9OWFBZR0NBSkFFR1dMN1EyQTMySkZHVU5XRzdWSU1CSCIsIm5hbWUiOiJBZG1pbiIsInN1YiI6IkFEWVJZQUlFQUhPWE5GUlVVM0daTzNZWTdLSk1XNTZLNjJWRkZOSk5MRjVUM0tGUFRLWktSRUJUIiwibmF0cyI6eyJsaW1pdHMiOnsic3VicyI6LTEsImRhdGEiOi0xLCJwYXlsb2FkIjotMSwiaW1wb3J0cyI6LTEsImV4cG9ydHMiOi0xLCJ3aWxkY2FyZHMiOnRydWUsImNvbm4iOi0xLCJsZWFmIjotMSwibWVtX3N0b3JhZ2UiOi0xLCJkaXNrX3N0b3JhZ2UiOi0xLCJzdHJlYW1zIjotMSwiY29uc3VtZXIiOi0xfSwiZGVmYXVsdF9wZXJtaXNzaW9ucyI6eyJwdWIiOnt9LCJzdWIiOnt9fSwidHlwZSI6ImFjY291bnQiLCJ2ZXJzaW9uIjoyfX0.aEEs-wIQma44PpzDaIOvVESY_PlbZn7Q9RNoqIaSQ5VW0yf8D7Xwesa8kJB3nviEUFWxjiSsrofFujtuONgTAQ
    ------END NATS ACCOUNT JWT------
    
    ************************* IMPORTANT *************************
    NKEY Seed printed below can be used to sign and prove identity.
    NKEYs are sensitive and should be treated as secrets.
    
    -----BEGIN ACCOUNT NKEY SEED-----
    SAAEOU7KXG4HWZUCNTPOBAFFPBWIQSMYXO7DIGDLSTP5ZP7NZ37JKT2QX4
    ------END ACCOUNT NKEY SEED------
    
    *************************************************************
    
  admin.creds: |
    -----BEGIN NATS USER JWT-----
    eyJ0eXAiOiJKV1QiLCJhbGciOiJlZDI1NTE5LW5rZXkifQ.eyJqdGkiOiJJWlVNWlFLTEpFV0dOQjU1NFBIWkVRREZKNkxIWlNXQ1RXT0s1NzU1WFRXUDczSTNNN1FBIiwiaWF0IjoxNjU1NzU4Njc5LCJpc3MiOiJBRFlSWUFJRUFIT1hORlJVVTNHWk8zWVk3S0pNVzU2SzYyVkZGTkpOTEY1VDNLRlBUS1pLUkVCVCIsIm5hbWUiOiJhZG1pbiIsInN1YiI6IlVDS1hWVFdEVDRBQ04yT1BUR0paUVBEVkhFWjNXN1FKS0VVVlI1UkE1UU00SFgyM0g3SldPNkpNIiwibmF0cyI6eyJwdWIiOnt9LCJzdWIiOnt9LCJzdWJzIjotMSwiZGF0YSI6LTEsInBheWxvYWQiOi0xLCJ0eXBlIjoidXNlciIsInZlcnNpb24iOjJ9fQ.8ZYy6tKbZgGNu4z2Bxra-yJ-cMjxBVVtNb6wSwzjGtu_QVRWeIKFTuu9YpBUA059C-CDKicudXNBJjqwSAN5CQ
    ------END NATS USER JWT------
    
    ************************* IMPORTANT *************************
    NKEY Seed printed below can be used to sign and prove identity.
    NKEYs are sensitive and should be treated as secrets.
    
    -----BEGIN USER NKEY SEED-----
    SUABHEBO6T2O2USMXBFYAEPO542A3FSB3CB2COUXZSDY6G63HORIYAMKMA
    ------END USER NKEY SEED------
    
    *************************************************************
---
# Source: ace/templates/platform/config.yaml
kind: Secret
apiVersion: v1
metadata:
  name: release-name-ace-config
  namespace: default
  labels:
    helm.sh/chart: ace-v2022.06.14
    app.kubernetes.io/name: ace
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v2022.06.09.1"
    app.kubernetes.io/managed-by: Helm
stringData:
  app.ini: |-
    APP_NAME = ACE: Kubernetes Native Data Platform

    RUN_MODE = prod

    EXPERIMENTAL_FEATURES = false

    DOMAIN   = 

    [site_accounts]
    ; WHY http, not https?
    PROTOCOL = http
    DOMAIN = 
    ROOT_URL = https://accounts.
    LANDING_PAGE = home
    APP_DATA_PATH = /data

    [site_api]
    ; WHY http, not https?
    PROTOCOL = http
    DOMAIN = api.
    ROOT_URL = https://api.

    [picture]
    DISABLE_GRAVATAR        = false
    ENABLE_FEDERATED_AVATAR = true
    AVATAR_UPLOAD_PATH      = /avatars

    [storage]
    BUCKET_URL = gs://ace/avatars

    [server]
    PROTOCOL = http
    DOMAIN = 
    ROOT_URL = https://
    LANDING_PAGE = home
    SSH_DOMAIN = 
    SSH_PORT = 
    SSH_LISTEN_PORT = 

    [database]
    DB_TYPE = "postgres"
    HOST = release-name-ace-db.default:5432
    NAME = ace
    USER = postgres
    PASSWD = bUQ;kJ~gXW08(x(S

    [session]
    DOMAIN = 
    PROVIDER = redis
    PROVIDER_CONFIG = network=tcp,addr=release-name-ace-cache.default:6379,password='uaJOi1mKLpy5fT8l',db=0,pool_size=100,idle_timeout=180,prefix=session-
    COOKIE_NAME = i_like_bytebuilders

    [cache]
    ADAPTER = redis
    INTERVAL = 60
    HOST = network=tcp,addr=release-name-ace-cache.default:6379,password='uaJOi1mKLpy5fT8l',db=1,pool_size=100,idle_timeout=180,prefix=cache-
    [mailer]
    ENABLED = true
    MAILER_TYPE = smtp
    HOST    = 
    IS_TLS_ENABLED = false
    FROM    = 
    USER    = 
    PASSWD  = 
    SUBJECT_PREFIX = ACE |
    SEND_AS_PLAIN_TEXT = false

    [log]
    MODE = console
    LEVEL = Info

    [oauth2]
    JWT_SECRET = ptbOHA2DgF0jl5OSZUTUQkyGOLKdaPEOxn6El7H7WlH

    [security]
    SECRET_KEY     = HypdllzabQPDsznsdKKitnU5f7JnUWAwnuAhFdVyBBeb2rQmEcSyUIhwtgLVUMcZ
    INSTALL_LOCK = true
    CSRF_COOKIE_HTTP_ONLY = false

    [service]
    ENABLE_CAPTCHA = true
    ACTIVE_CODE_LIVE_MINUTES = 180
    RESET_PASSWD_CODE_LIVE_MINUTES = 180
    REGISTER_EMAIL_CONFIRM = false
    DISABLE_REGISTRATION = false
    REQUIRE_SIGNIN_VIEW = false
    ENABLE_NOTIFY_MAIL = true
    ENABLE_REVERSE_PROXY_AUTHENTICATION = false
    ENABLE_REVERSE_PROXY_AUTO_REGISTRATION = false
    NO_REPLY_ADDRESS = 

    [other]
    SHOW_FOOTER_BRANDING = false
    SHOW_FOOTER_VERSION = true
    SHOW_FOOTER_TEMPLATE_LOAD_TIME = true
    [metrics]
    ENABLED = true

    [cors]
    ENABLED = true
    SCHEME = https
    ALLOW_DOMAIN = 
    ALLOW_SUBDOMAIN = true

    [kms]
    MASTER_KEY_URL = 'base64key://dEWyBTbMOqY5hj9z8ZuxuGIng5j2yAWD9kESDIpDEn5BdHlvXWyL7LJvisdsyd4d'

    [searchlight]
    ENABLE = false
    [nats]
    OPERATOR_CREDS = /nats/creds/Operator.creds
    SYSTEM_CREDS = /nats/creds/SYS.creds
    SYSTEM_USER_CREDS = /nats/creds/sys.creds
    ADMIN_CREDS = /nats/creds/ADMIN.creds
    ADMIN_USER_CREDS = /nats/creds/admin.creds

    ; When TLS is not used, use cluster svc ip
    ;ACCOUNT_RESOLVER = nats://release-name-ace-nats.default.svc:4222
    ;SERVER = nats://release-name-ace-nats.default.svc:4222,nats://nats.:4222

    ACCOUNT_RESOLVER = nats://nats.:4222
    NATS_SERVER = wss://nats.
    SERVER = nats://nats.:4222
    WEBSOCKET_SERVER = wss://nats.
    SHARD_COUNT = 128
    REPLICAS = 1

    [yaml_storage]
    HOST = 
    BUCKET = 
    CREDENTIAL = /data/credentials/sa.json
---
# Source: ace/templates/platform/objstore-cred.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-ace-objstore-cred
  namespace: default
  labels:
    helm.sh/chart: ace-v2022.06.14
    app.kubernetes.io/name: ace
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v2022.06.09.1"
    app.kubernetes.io/managed-by: Helm
type: Opaque
stringData:
  sa.json: '{"secret": "json"}'
---
# Source: ace/templates/stash/backup-repo-cred.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-ace-backup-repo-cred
  namespace: default
  labels:
    helm.sh/chart: ace-v2022.06.14
    app.kubernetes.io/name: ace
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v2022.06.09.1"
    app.kubernetes.io/managed-by: Helm
type: Opaque
stringData:
  AWS_ACCESS_KEY_ID: 'xyz'
  AWS_SECRET_ACCESS_KEY: 'xyz'
  RESTIC_PASSWORD: 'xyz'
---
# Source: ace/templates/stash/init-repo-cred.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-ace-init-repo-cred
  namespace: default
  labels:
    helm.sh/chart: ace-v2022.06.14
    app.kubernetes.io/name: ace
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v2022.06.09.1"
    app.kubernetes.io/managed-by: Helm
type: Opaque
stringData:
  AWS_ACCESS_KEY_ID: 'xyz'
  AWS_SECRET_ACCESS_KEY: 'xyz'
  RESTIC_PASSWORD: 'xyz'
---
# Source: ace/charts/ingress-nginx/templates/controller-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    helm.sh/chart: ingress-nginx-4.1.0
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.2.0"
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
  name: release-name-ingress-nginx-controller
  namespace: default
data:
  allow-snippet-annotations: "true"
---
# Source: ace/charts/nats/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-nats-config
  namespace: default
  labels:
    helm.sh/chart: nats-0.17.0
    app.kubernetes.io/name: nats
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.8.0"
    app.kubernetes.io/managed-by: Helm
data:
  nats.conf: |
    # NATS Clients Port
    port: 0

    # PID file shared with configuration reloader.
    pid_file: "/var/run/nats/nats.pid"

    ###############
    #             #
    # Monitoring  #
    #             #
    ###############
    http: 8222
    server_name:$POD_NAME
    #####################
    #                   #
    # TLS Configuration #
    #                   #
    #####################
    tls {
        cert_file: /etc/nats-certs/clients/ace-cert/tls.crt
        key_file:  /etc/nats-certs/clients/ace-cert/tls.key
    }
    ###################################
    #                                 #
    # NATS JetStream                  #
    #                                 #
    ###################################
    jetstream {
      store_dir: /nats/jetstream

      max_file:10Gi
    }
    max_payload: 4Mb
    ##################
    #                #
    # Websocket      #
    #                #
    ##################
    websocket {
      port: 443
        
        tls {
        cert_file: /etc/nats-certs/ws/ace-cert/tls.crt
        key_file: /etc/nats-certs/ws/ace-cert/tls.key
        }
      same_origin: false
      allowed_origins: ["https://","https://console.","https://kubedb.","https://grafana."]
    }
    ##################
    #                #
    # Authorization  #
    #                #
    ##################
            operator: eyJ0eXAiOiJKV1QiLCJhbGciOiJlZDI1NTE5LW5rZXkifQ.eyJhdWQiOiJPQUVUT05EN1g1TkQySlBaNEFZVjRQTE9OWFBZR0NBSkFFR1dMN1EyQTMySkZHVU5XRzdWSU1CSCIsImV4cCI6NDgxMTQzMjI3OSwianRpIjoiM1JIUFpTNkZLWkZKSFUzU05aM0dRUVc3UEVSSFdUN0NYTFVRNTZEUFlSQ0RBRlM3QkIyQSIsImlhdCI6MTY1NTc1ODY3OSwiaXNzIjoiT0FFVE9ORDdYNU5EMkpQWjRBWVY0UExPTlhQWUdDQUpBRUdXTDdRMkEzMkpGR1VOV0c3VklNQkgiLCJuYW1lIjoiT3BlcmF0b3IiLCJuYmYiOjE2NTU3NTg2NzksInN1YiI6Ik9BRVRPTkQ3WDVORDJKUFo0QVlWNFBMT05YUFlHQ0FKQUVHV0w3UTJBMzJKRkdVTldHN1ZJTUJIIiwibmF0cyI6eyJzaWduaW5nX2tleXMiOlsiT0FFVE9ORDdYNU5EMkpQWjRBWVY0UExPTlhQWUdDQUpBRUdXTDdRMkEzMkpGR1VOV0c3VklNQkgiXSwidHlwZSI6Im9wZXJhdG9yIiwidmVyc2lvbiI6Mn19.5446s14XaHm9y2NbVy6mtVA5O1LA0gfoKRCkSKTJQNvxzb_YjiQ_sTBfSkDOhHB524lt86pzHuAyJL99NXIMAg
            system_account: ABDD6RLSCEJQAYYGBKTN4W7KLNZNWSEKNFCVNPP3MEDN7HKJJUBWAYW5

          resolver: {
            type: full
            dir: "/etc/nats-config/accounts/jwt"

            allow_delete: false

            interval: ""
          }
      resolver_preload: {"ABDD6RLSCEJQAYYGBKTN4W7KLNZNWSEKNFCVNPP3MEDN7HKJJUBWAYW5":"eyJ0eXAiOiJKV1QiLCJhbGciOiJlZDI1NTE5LW5rZXkifQ.eyJqdGkiOiJNTDNVNFVQVEtESVRFTFlGQkhTMjVTMkpFSTZVVUlQRVpXV0hPWjU2Q01NVVlUNlpFUUpBIiwiaWF0IjoxNjU1NzU4Njc5LCJpc3MiOiJPQUVUT05EN1g1TkQySlBaNEFZVjRQTE9OWFBZR0NBSkFFR1dMN1EyQTMySkZHVU5XRzdWSU1CSCIsIm5hbWUiOiJTWVMiLCJzdWIiOiJBQkRENlJMU0NFSlFBWVlHQktUTjRXN0tMTlpOV1NFS05GQ1ZOUFAzTUVETjdIS0pKVUJXQVlXNSIsIm5hdHMiOnsibGltaXRzIjp7InN1YnMiOi0xLCJkYXRhIjotMSwicGF5bG9hZCI6LTEsImltcG9ydHMiOi0xLCJleHBvcnRzIjotMSwid2lsZGNhcmRzIjp0cnVlLCJjb25uIjotMSwibGVhZiI6LTF9LCJkZWZhdWx0X3Blcm1pc3Npb25zIjp7InB1YiI6e30sInN1YiI6e319LCJ0eXBlIjoiYWNjb3VudCIsInZlcnNpb24iOjJ9fQ.25iUkX54T_2dnKcv6BbQPmF6NgMgTH1a5xAP8KT47fXbmLazqFd3UKOB27l4AkzvcD2WybhmszG7yP8pUZRwAQ","ADYRYAIEAHOXNFRUU3GZO3YY7KJMW56K62VFFNJNLF5T3KFPTKZKREBT":"eyJ0eXAiOiJKV1QiLCJhbGciOiJlZDI1NTE5LW5rZXkifQ.eyJqdGkiOiJQTEVZNEFWMjVIRFNXNlJYV1RUQ0xIUlRJM0E3Wk4zSk5WR00zN0gzWDVXSVlFWExUVEdBIiwiaWF0IjoxNjU1NzU4Njc5LCJpc3MiOiJPQUVUT05EN1g1TkQySlBaNEFZVjRQTE9OWFBZR0NBSkFFR1dMN1EyQTMySkZHVU5XRzdWSU1CSCIsIm5hbWUiOiJBZG1pbiIsInN1YiI6IkFEWVJZQUlFQUhPWE5GUlVVM0daTzNZWTdLSk1XNTZLNjJWRkZOSk5MRjVUM0tGUFRLWktSRUJUIiwibmF0cyI6eyJsaW1pdHMiOnsic3VicyI6LTEsImRhdGEiOi0xLCJwYXlsb2FkIjotMSwiaW1wb3J0cyI6LTEsImV4cG9ydHMiOi0xLCJ3aWxkY2FyZHMiOnRydWUsImNvbm4iOi0xLCJsZWFmIjotMSwibWVtX3N0b3JhZ2UiOi0xLCJkaXNrX3N0b3JhZ2UiOi0xLCJzdHJlYW1zIjotMSwiY29uc3VtZXIiOi0xfSwiZGVmYXVsdF9wZXJtaXNzaW9ucyI6eyJwdWIiOnt9LCJzdWIiOnt9fSwidHlwZSI6ImFjY291bnQiLCJ2ZXJzaW9uIjoyfX0.aEEs-wIQma44PpzDaIOvVESY_PlbZn7Q9RNoqIaSQ5VW0yf8D7Xwesa8kJB3nviEUFWxjiSsrofFujtuONgTAQ"}
    system_account: ABDD6RLSCEJQAYYGBKTN4W7KLNZNWSEKNFCVNPP3MEDN7HKJJUBWAYW5
---
# Source: ace/templates/nats/nats-cred.yaml
# mounted into nats-server
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-ace-nats-cred
  namespace: default
  labels:
    helm.sh/chart: ace-v2022.06.14
    app.kubernetes.io/name: ace
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v2022.06.09.1"
    app.kubernetes.io/managed-by: Helm
data:
  Operator.jwt: eyJ0eXAiOiJKV1QiLCJhbGciOiJlZDI1NTE5LW5rZXkifQ.eyJhdWQiOiJPQUVUT05EN1g1TkQySlBaNEFZVjRQTE9OWFBZR0NBSkFFR1dMN1EyQTMySkZHVU5XRzdWSU1CSCIsImV4cCI6NDgxMTQzMjI3OSwianRpIjoiM1JIUFpTNkZLWkZKSFUzU05aM0dRUVc3UEVSSFdUN0NYTFVRNTZEUFlSQ0RBRlM3QkIyQSIsImlhdCI6MTY1NTc1ODY3OSwiaXNzIjoiT0FFVE9ORDdYNU5EMkpQWjRBWVY0UExPTlhQWUdDQUpBRUdXTDdRMkEzMkpGR1VOV0c3VklNQkgiLCJuYW1lIjoiT3BlcmF0b3IiLCJuYmYiOjE2NTU3NTg2NzksInN1YiI6Ik9BRVRPTkQ3WDVORDJKUFo0QVlWNFBMT05YUFlHQ0FKQUVHV0w3UTJBMzJKRkdVTldHN1ZJTUJIIiwibmF0cyI6eyJzaWduaW5nX2tleXMiOlsiT0FFVE9ORDdYNU5EMkpQWjRBWVY0UExPTlhQWUdDQUpBRUdXTDdRMkEzMkpGR1VOV0c3VklNQkgiXSwidHlwZSI6Im9wZXJhdG9yIiwidmVyc2lvbiI6Mn19.5446s14XaHm9y2NbVy6mtVA5O1LA0gfoKRCkSKTJQNvxzb_YjiQ_sTBfSkDOhHB524lt86pzHuAyJL99NXIMAg
  SYS.jwt: eyJ0eXAiOiJKV1QiLCJhbGciOiJlZDI1NTE5LW5rZXkifQ.eyJqdGkiOiJNTDNVNFVQVEtESVRFTFlGQkhTMjVTMkpFSTZVVUlQRVpXV0hPWjU2Q01NVVlUNlpFUUpBIiwiaWF0IjoxNjU1NzU4Njc5LCJpc3MiOiJPQUVUT05EN1g1TkQySlBaNEFZVjRQTE9OWFBZR0NBSkFFR1dMN1EyQTMySkZHVU5XRzdWSU1CSCIsIm5hbWUiOiJTWVMiLCJzdWIiOiJBQkRENlJMU0NFSlFBWVlHQktUTjRXN0tMTlpOV1NFS05GQ1ZOUFAzTUVETjdIS0pKVUJXQVlXNSIsIm5hdHMiOnsibGltaXRzIjp7InN1YnMiOi0xLCJkYXRhIjotMSwicGF5bG9hZCI6LTEsImltcG9ydHMiOi0xLCJleHBvcnRzIjotMSwid2lsZGNhcmRzIjp0cnVlLCJjb25uIjotMSwibGVhZiI6LTF9LCJkZWZhdWx0X3Blcm1pc3Npb25zIjp7InB1YiI6e30sInN1YiI6e319LCJ0eXBlIjoiYWNjb3VudCIsInZlcnNpb24iOjJ9fQ.25iUkX54T_2dnKcv6BbQPmF6NgMgTH1a5xAP8KT47fXbmLazqFd3UKOB27l4AkzvcD2WybhmszG7yP8pUZRwAQ
---
# Source: ace/charts/ingress-nginx/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    helm.sh/chart: ingress-nginx-4.1.0
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.2.0"
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/managed-by: Helm
  name: release-name-ingress-nginx
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
      - endpoints
      - nodes
      - pods
      - secrets
      - namespaces
    verbs:
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - get
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingresses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingresses/status
    verbs:
      - update
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingressclasses
    verbs:
      - get
      - list
      - watch
---
# Source: ace/templates/rbac/rbac.yaml
# TODO: Remove this once virtual-kubernetes is ready
# This temporarily gives the s/a in gitea deployment permission on the BB crds.

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-ace
  # namespace: default
  labels:
    helm.sh/chart: ace-v2022.06.14
    app.kubernetes.io/name: ace
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v2022.06.09.1"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - cloud.bytebuilders.dev
  - cluster.bytebuilders.dev
  - kubepack.com
  resources:
  - "*"
  verbs: ["*"]
---
# Source: ace/charts/ingress-nginx/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    helm.sh/chart: ingress-nginx-4.1.0
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.2.0"
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/managed-by: Helm
  name: release-name-ingress-nginx
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-ingress-nginx
subjects:
  - kind: ServiceAccount
    name: release-name-ingress-nginx
    namespace: "default"
---
# Source: ace/templates/rbac/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-ace
  # namespace: default
  labels:
    helm.sh/chart: ace-v2022.06.14
    app.kubernetes.io/name: ace
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v2022.06.09.1"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-ace
subjects:
- kind: ServiceAccount
  name: default
  namespace: default
---
# Source: ace/charts/ingress-nginx/templates/controller-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    helm.sh/chart: ingress-nginx-4.1.0
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.2.0"
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
  name: release-name-ingress-nginx
  namespace: default
rules:
  - apiGroups:
      - ""
    resources:
      - namespaces
    verbs:
      - get
  - apiGroups:
      - ""
    resources:
      - configmaps
      - pods
      - secrets
      - endpoints
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingresses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingresses/status
    verbs:
      - update
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingressclasses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - configmaps
    resourceNames:
      - ingress-controller-leader
    verbs:
      - get
      - update
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - create
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
---
# Source: ace/charts/ingress-nginx/templates/controller-rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    helm.sh/chart: ingress-nginx-4.1.0
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.2.0"
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
  name: release-name-ingress-nginx
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: release-name-ingress-nginx
subjects:
  - kind: ServiceAccount
    name: release-name-ingress-nginx
    namespace: "default"
---
# Source: ace/charts/ingress-dns/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-ingress-dns
  labels:
    helm.sh/chart: ingress-dns-1.9.0
    app.kubernetes.io/name: ingress-dns
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  selector:
    app.kubernetes.io/name: ingress-dns
    app.kubernetes.io/instance: release-name
  ports:
    - name: http
      port: 0
      targetPort: http
      protocol: TCP
---
# Source: ace/charts/ingress-nginx/templates/controller-service-webhook.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    helm.sh/chart: ingress-nginx-4.1.0
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.2.0"
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
  name: release-name-ingress-nginx-controller-admission
  namespace: default
spec:
  type: ClusterIP
  ports:
    - name: https-webhook
      port: 443
      targetPort: webhook
      appProtocol: https
  selector:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: controller
---
# Source: ace/charts/nats-dns/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-nats-dns
  labels:
    helm.sh/chart: nats-dns-1.9.0
    app.kubernetes.io/name: nats-dns
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  selector:
    app.kubernetes.io/name: nats-dns
    app.kubernetes.io/instance: release-name
  ports:
    - name: http
      port: 0
      targetPort: http
      protocol: TCP
---
# Source: ace/charts/nats/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-nats
  namespace: default
  labels:
    helm.sh/chart: nats-0.17.0
    app.kubernetes.io/name: nats
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.8.0"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    app.kubernetes.io/name: nats
    app.kubernetes.io/instance: release-name
  clusterIP: None
  publishNotReadyAddresses: true
  ports:
  - name: websocket
    port: 443
  - name: 
    port: 0
  - name: cluster
    port: 6222
  - name: monitor
    port: 8222
  - name: metrics
    port: 7777
  - name: leafnodes
    port: 7422
  - name: gateways
    port: 7522
---
# Source: ace/charts/ingress-nginx/templates/controller-daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    helm.sh/chart: ingress-nginx-4.1.0
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.2.0"
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
  name: release-name-ingress-nginx-controller
  namespace: default
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: ingress-nginx
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: controller
  revisionHistoryLimit: 10
  minReadySeconds: 0
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ingress-nginx
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: controller
    spec:
      dnsPolicy: ClusterFirst
      containers:
        - name: controller
          image: "k8s.gcr.io/ingress-nginx/controller:v1.2.0@sha256:d8196e3bc1e72547c5dec66d6556c0ff92a23f6d0919b206be170bc90d5f9185"
          imagePullPolicy: IfNotPresent
          lifecycle: 
            preStop:
              exec:
                command:
                - /wait-shutdown
          args:
            - /nginx-ingress-controller
            - --election-id=ingress-controller-leader
            - --controller-class=k8s.io/ingress-nginx-ace
            - --ingress-class=nginx
            - --configmap=$(POD_NAMESPACE)/release-name-ingress-nginx-controller
            - --validating-webhook=:8443
            - --validating-webhook-certificate=/usr/local/certificates/cert
            - --validating-webhook-key=/usr/local/certificates/key
            - --ingress-class-by-name=true
          securityContext:
            capabilities:
                drop:
                - ALL
                add:
                - NET_BIND_SERVICE
            runAsUser: 101
            allowPrivilegeEscalation: true
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: LD_PRELOAD
              value: /usr/local/lib/libmimalloc.so
          livenessProbe: 
            failureThreshold: 5
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe: 
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
              hostPort: 80
            - name: https
              containerPort: 443
              protocol: TCP
              hostPort: 443
            - name: webhook
              containerPort: 8443
              protocol: TCP
          volumeMounts:
            - name: webhook-cert
              mountPath: /usr/local/certificates/
              readOnly: true
          resources: 
            requests:
              cpu: 100m
              memory: 90Mi
      nodeSelector: 
        kubernetes.io/os: linux
      serviceAccountName: release-name-ingress-nginx
      terminationGracePeriodSeconds: 300
      volumes:
        - name: webhook-cert
          secret:
            secretName: release-name-ingress-nginx-admission
---
# Source: ace/charts/ingress-dns/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-ingress-dns
  labels:
    helm.sh/chart: ingress-dns-1.9.0
    app.kubernetes.io/name: ingress-dns
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: ingress-dns
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ingress-dns
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: default
      securityContext:
        fsGroup: 65534
      containers:
        - name: external-dns
          securityContext:
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 65534
          image: appscode/external-dns:external-dns-helm-chart-1.9.0-1-gbd1bb40c
          imagePullPolicy: IfNotPresent
          env:
            - name: CF_API_TOKEN
              value: XYZ
          args:
            - --log-level=debug
            - --log-format=
            - --interval=
            - --source=ingress
            - --policy=sync
            - --registry=txt
            - --txt-owner-id=ingress-dns
            - --domain-filter=
            - --provider=cloudflare
            - --ignore-ingress-tls-spec
          ports:
            - name: http
              protocol: TCP
              containerPort: 7979
          livenessProbe:
            failureThreshold: 2
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          readinessProbe:
            failureThreshold: 6
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
---
# Source: ace/charts/nats-dns/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-nats-dns
  labels:
    helm.sh/chart: nats-dns-1.9.0
    app.kubernetes.io/name: nats-dns
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: nats-dns
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: nats-dns
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: default
      securityContext:
        fsGroup: 65534
      containers:
        - name: external-dns
          securityContext:
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 65534
          image: appscode/external-dns:external-dns-helm-chart-1.9.0-1-gbd1bb40c
          imagePullPolicy: IfNotPresent
          env:
            - name: CF_API_TOKEN
              value: XYZ
          args:
            - --log-level=debug
            - --log-format=
            - --interval=
            - --source=node
            - --policy=sync
            - --registry=txt
            - --txt-owner-id=nats-dns
            - --domain-filter=
            - --provider=cloudflare
            - --fqdn-template=nats.
            - --label-filter=
          ports:
            - name: http
              protocol: TCP
              containerPort: 7979
          livenessProbe:
            failureThreshold: 2
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          readinessProbe:
            failureThreshold: 6
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
---
# Source: ace/charts/nats/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-nats
  namespace: default
  labels:
    helm.sh/chart: nats-0.17.0
    app.kubernetes.io/name: nats
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.8.0"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: nats
      app.kubernetes.io/instance: release-name
  replicas: 1
  serviceName: release-name-nats

  podManagementPolicy: 

  template:
    metadata:
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "7777"
        prometheus.io/scrape: "true"
      labels:
        app.kubernetes.io/name: nats
        app.kubernetes.io/instance: release-name
        secret.reloader.stakater.com/reload: ace-cert
    spec:
      # Common volumes for the containers.
      volumes:
      - name: config-volume
        configMap:
          name: release-name-nats-config

      # Local volume shared with the reloader.
      - name: pid
        emptyDir: {}

      #################
      #               #
      #  TLS Volumes  #
      #               #
      #################
      
      - name: ace-cert-clients-volume
        secret:
          secretName: ace-cert
      
      - name: ace-cert-ws-volume
        secret:
          secretName: ace-cert

      serviceAccountName: release-name-nats

      # Required to be able to HUP signal and apply config
      # reload to the server without restarting the pod.
      shareProcessNamespace: true

      #################
      #               #
      #  NATS Server  #
      #               #
      #################
      terminationGracePeriodSeconds: 60
      containers:
      - name: nats
        image: 
        imagePullPolicy: 
        resources:
          limits:
            memory: 2Gi
          requests:
            memory: 2Gi
        ports:
        - containerPort: 0
          name: 
          hostPort: 0
        - containerPort: 6222
          name: cluster
        - containerPort: 8222
          name: monitor
        - containerPort: 7777
          name: metrics
        - containerPort: 443
          name: websocket
          hostPort: 443

        command:
        - "nats-server"
        - "--config"
        - "/etc/nats-config/nats.conf"

        # Required to be able to define an environment variable
        # that refers to other environment variables.  This env var
        # is later used as part of the configuration file.
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SERVER_NAME
          value: $(POD_NAME)
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: CLUSTER_ADVERTISE
          value: $(POD_NAME).release-name-nats.$(POD_NAMESPACE)
        volumeMounts:
        - name: config-volume
          mountPath: /etc/nats-config
        - name: pid
          mountPath: /var/run/nats
        - name: nats-jwt-pvc
          mountPath: /etc/nats-config/accounts/jwt
        - name: release-name-nats-js-pvc
          mountPath: /nats/jetstream
        
        #######################
        #                     #
        #  TLS Volumes Mounts #
        #                     #
        #######################
        
        - name: ace-cert-clients-volume
          mountPath: /etc/nats-certs/clients/ace-cert
        
        - name: ace-cert-ws-volume
          mountPath: /etc/nats-certs/ws/ace-cert

        #######################
        #                     #
        # Healthcheck Probes  #
        #                     #
        #######################
        livenessProbe:
          httpGet:
            path: /
            port: 8222
          initialDelaySeconds: 10
          timeoutSeconds: 5
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /
            port: 8222
          initialDelaySeconds: 10
          timeoutSeconds: 5
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 30

        # Gracefully stop NATS Server on pod deletion or image upgrade.
        #
        lifecycle:
          preStop:
            exec:
              # send the lame duck shutdown signal to trigger a graceful shutdown
              # nats-server will ignore the TERM signal it receives after this
              #
              command:
              - "nats-server"
              - "-sl=ldm=/var/run/nats/nats.pid"

      #################################
      #                               #
      #  NATS Configuration Reloader  #
      #                               #
      #################################

      ##############################
      #                            #
      #  NATS Prometheus Exporter  #
      #                            #
      ##############################
      - name: metrics
        image: 
        imagePullPolicy: 
        resources:
          {}
        args:
        - -connz
        - -routez
        - -subz
        - -varz
        - -prefix=nats
        - -use_internal_server_id
        - -jsz=all
        - http://localhost:8222/
        ports:
        - containerPort: 7777
          name: metrics

  volumeClaimTemplates:
  #####################################
  #                                   #
  #  Account Server Embedded JWT      #
  #                                   #
  #####################################
    - metadata:
        name: nats-jwt-pvc
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 10Gi
        storageClassName: "standard"
  #####################################
  #                                   #
  #  Jetstream New Persistent Volume  #
  #                                   #
  #####################################
    - metadata:
        name: release-name-nats-js-pvc
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 10Gi
        storageClassName: "standard"
---
# Source: ace/templates/platform/setup-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: release-name-ace-setup
  namespace: default
  labels:
    helm.sh/chart: ace-v2022.06.14
    app.kubernetes.io/name: ace
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v2022.06.09.1"
    app.kubernetes.io/managed-by: Helm
spec:
  backoffLimit: 4
  template:
    spec:
      imagePullSecrets:
        null
      serviceAccountName: default
      securityContext:
        {}
      containers:
        - name: ace
          securityContext:
            {}
          image: "appscode/gitea:v2022.06.09.1"
          imagePullPolicy: Always
          command:
            # - sh
            # - -c
            # - "sleep 120; gitea dev --reload-nats-accounts"
            - gitea
            - dev
            - --reload-nats-accounts
            
            # - --register-crds
            # - --create-products
            # - --migrate
          # ports:
          #   - name: http
          #     containerPort: 3000
          #     protocol: TCP
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          resources:
            {}
          env:
            - name: GOOGLE_APPLICATION_CREDENTIALS
              value: /data/credentials/sa.json
          volumeMounts:
            - name: data
              mountPath: /data
            - name: config
              mountPath: /data/gitea/conf/app.ini
              subPath: app.ini
            - name: nats-cred
              mountPath: /nats/creds
            #
            # - name: objstore-cred
            #   mountPath: /data/credentials
            #
      volumes:
        - name: data
          emptyDir: {}
        - name: config
          secret:
            defaultMode: 420
            secretName: release-name-ace-config
        - name: nats-cred
          secret:
            defaultMode: 420
            secretName: release-name-ace-nats-cred
        #
        # - name: objstore-cred
        #   secret:
        #     defaultMode: 420
        #     secretName: release-name-ace-objstore-cred
        #
      restartPolicy: Never
---
# Source: ace/charts/ingress-nginx/templates/controller-ingressclass.yaml
# We don't support namespaced ingressClass yet
# So a ClusterRole and a ClusterRoleBinding is required
apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  labels:
    helm.sh/chart: ingress-nginx-4.1.0
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.2.0"
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
  name: nginx-ace
spec:
  controller: k8s.io/ingress-nginx-ace
---
# Source: ace/templates/ingress/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: release-name-ace
  namespace: default
  labels:
    helm.sh/chart: ace-v2022.06.14
    app.kubernetes.io/name: ace
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v2022.06.09.1"
    app.kubernetes.io/managed-by: Helm
  annotations:
    cert-manager.io/issuer: release-name-ace
spec:
  ingressClassName: nginx-ace
  rules:
  tls:
  - secretName: release-name-ace-cert
    hosts:
    - 'nats.'
---
# Source: ace/templates/ingress/ingress-nats.yaml
# TODO: expose nats websocket via nginx
# https://discuss.kubernetes.io/t/how-to-use-ingress-nginx-with-secure-backend/7347/2
---
# Source: ace/templates/db/backup-config.yaml
apiVersion: stash.appscode.com/v1beta1
kind: BackupConfiguration
metadata:
  name: release-name-ace-db
  namespace: default
  labels:
    helm.sh/chart: ace-v2022.06.14
    app.kubernetes.io/name: ace
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v2022.06.09.1"
    app.kubernetes.io/managed-by: Helm
spec:
  repository:
    name: release-name-ace-db-repo
  retentionPolicy:
    keepLast: 5
    name: keep-last-5
    prune: true
  schedule: '*/2 * * * *'
  target:
    ref:
      apiVersion: appcatalog.appscode.com/v1alpha1
      kind: AppBinding
      name: release-name-ace-db
---
# Source: ace/templates/ingress/issuer.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: release-name-ace
  namespace: default
  labels:
    helm.sh/chart: ace-v2022.06.14
    app.kubernetes.io/name: ace
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v2022.06.09.1"
    app.kubernetes.io/managed-by: Helm
spec:
  acme:
    server: https://acme-staging-v02.api.letsencrypt.org/directory
    email: ops@appscode.cloud
    # Name of a secret used to store the ACME account private key
    privateKeySecretRef:
      name: release-name-ace-cert-cred
    # ACME DNS-01 provider configurations
    solvers:
    # An empty 'selector' means that this solver matches all domains
    - selector: {}
      dns01:
---
# Source: ace/templates/db/db.yaml
apiVersion: kubedb.com/v1alpha2
kind: Postgres
metadata:
  name: release-name-ace-db
  namespace: default
  labels:
    helm.sh/chart: ace-v2022.06.14
    app.kubernetes.io/name: ace
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v2022.06.09.1"
    app.kubernetes.io/managed-by: Helm
spec:
  version: "13.2"
  replicas: 3
  storageType: Durable
  storage:
    storageClassName: standard
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 20Gi
  podTemplate:
    spec:
      resources:
        limits:
          memory: 512Mi
        requests:
          memory: 512Mi
  terminationPolicy: Delete
  authSecret:
    name: release-name-ace-db-auth
  configSecret:
    name: release-name-ace-db-config
  init:
    waitForInitialRestore: false
    script:
      secret:
        secretName: release-name-ace-db-init-script
  monitor:
    agent: prometheus.io/operator
    prometheus:
      exporter:
        resources:
          limits:
            memory: 128Mi
          requests:
            memory: 128Mi
      serviceMonitor:
        interval: 30s
        labels:
          release: kube-prometheus-stack
---
# Source: ace/templates/cache/cache.yaml
apiVersion: kubedb.com/v1alpha2
kind: Redis
metadata:
  name: release-name-ace-cache
  namespace: default
  labels:
    helm.sh/chart: ace-v2022.06.14
    app.kubernetes.io/name: ace
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v2022.06.09.1"
    app.kubernetes.io/managed-by: Helm
spec:
  version: "6.0.6"
  storageType: Durable
  storage:
    storageClassName: standard
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 10Gi
  podTemplate:
    spec:
      resources:
        limits:
          memory: 512Mi
        requests:
          memory: 512Mi
  terminationPolicy: Delete
  authSecret:
    name: release-name-ace-cache-auth
  monitor:
    agent: prometheus.io/operator
    prometheus:
      exporter:
        resources:
          limits:
            memory: 128Mi
          requests:
            memory: 128Mi
      serviceMonitor:
        interval: 30s
        labels:
          release: kube-prometheus-stack
---
# Source: ace/templates/db/backup-repo.yaml
apiVersion: stash.appscode.com/v1alpha1
kind: Repository
metadata:
  name: release-name-ace-db-repo
  namespace: default
  labels:
    helm.sh/chart: ace-v2022.06.14
    app.kubernetes.io/name: ace
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v2022.06.09.1"
    app.kubernetes.io/managed-by: Helm
spec:
  backend:
    gcs:
      bucket: stash-testing
      prefix: /release-name-ace/db
    storageSecretName: release-name-ace-backup-repo-cred
---
# Source: ace/charts/nats/templates/serviceMonitor.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: release-name-nats
  namespace: default
  labels:
    release: kube-prometheus-stack
spec:
  endpoints:
  - port: metrics
    path: /metrics
  namespaceSelector:
    any: true
  selector:
    matchLabels:
      app.kubernetes.io/name: nats
      app.kubernetes.io/instance: release-name
---
# Source: ace/charts/ingress-nginx/templates/admission-webhooks/validating-webhook.yaml
# before changing this value, check the required kubernetes version
# https://kubernetes.io/docs/reference/access-authn-authz/extensible-admission-controllers/#prerequisites
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  labels:
    helm.sh/chart: ingress-nginx-4.1.0
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.2.0"
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: admission-webhook
  name: release-name-ingress-nginx-admission
webhooks:
  - name: validate.nginx.ingress.kubernetes.io
    matchPolicy: Equivalent
    rules:
      - apiGroups:
          - networking.k8s.io
        apiVersions:
          - v1
        operations:
          - CREATE
          - UPDATE
        resources:
          - ingresses
    failurePolicy: Fail
    sideEffects: None
    admissionReviewVersions:
      - v1
    clientConfig:
      service:
        namespace: "default"
        name: release-name-ingress-nginx-controller-admission
        path: /networking/v1/ingresses
---
# Source: ace/charts/ingress-nginx/templates/admission-webhooks/job-patch/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-ingress-nginx-admission
  namespace: default
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade,post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
  labels:
    helm.sh/chart: ingress-nginx-4.1.0
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.2.0"
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: admission-webhook
---
# Source: ace/charts/ingress-nginx/templates/admission-webhooks/job-patch/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-ingress-nginx-admission
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade,post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
  labels:
    helm.sh/chart: ingress-nginx-4.1.0
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.2.0"
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: admission-webhook
rules:
  - apiGroups:
      - admissionregistration.k8s.io
    resources:
      - validatingwebhookconfigurations
    verbs:
      - get
      - update
---
# Source: ace/charts/ingress-nginx/templates/admission-webhooks/job-patch/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name:  release-name-ingress-nginx-admission
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade,post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
  labels:
    helm.sh/chart: ingress-nginx-4.1.0
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.2.0"
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: admission-webhook
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-ingress-nginx-admission
subjects:
  - kind: ServiceAccount
    name: release-name-ingress-nginx-admission
    namespace: "default"
---
# Source: ace/charts/ingress-nginx/templates/admission-webhooks/job-patch/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name:  release-name-ingress-nginx-admission
  namespace: default
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade,post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
  labels:
    helm.sh/chart: ingress-nginx-4.1.0
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.2.0"
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: admission-webhook
rules:
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - get
      - create
---
# Source: ace/charts/ingress-nginx/templates/admission-webhooks/job-patch/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: release-name-ingress-nginx-admission
  namespace: default
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade,post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
  labels:
    helm.sh/chart: ingress-nginx-4.1.0
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.2.0"
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: admission-webhook
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: release-name-ingress-nginx-admission
subjects:
  - kind: ServiceAccount
    name: release-name-ingress-nginx-admission
    namespace: "default"
---
# Source: ace/charts/nats/templates/tests/test-request-reply.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-nats-test-request-reply"
  labels:
    helm.sh/chart: nats-0.17.0
    app.kubernetes.io/name: nats
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.8.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
  - name: nats-box
    image: synadia/nats-box
    env:
    - name: NATS_HOST
      value: release-name-nats
    command:
    - /bin/sh
    - -ec
    - |
      nats reply -s nats://$NATS_HOST:0 'name.>' --command "echo 1" &
    - |
      "&&"
    - |
      name=$(nats request -s nats://$NATS_HOST:0 name.test '' 2>/dev/null)
    - |
      "&&"
    - |
      [ $name = test ]

  restartPolicy: Never
---
# Source: ace/charts/ingress-nginx/templates/admission-webhooks/job-patch/job-createSecret.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: release-name-ingress-nginx-admission-create
  namespace: default
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
  labels:
    helm.sh/chart: ingress-nginx-4.1.0
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.2.0"
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: admission-webhook
spec:
  template:
    metadata:
      name: release-name-ingress-nginx-admission-create
      labels:
        helm.sh/chart: ingress-nginx-4.1.0
        app.kubernetes.io/name: ingress-nginx
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/version: "1.2.0"
        app.kubernetes.io/part-of: ingress-nginx
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: admission-webhook
    spec:
      containers:
        - name: create
          image: "k8s.gcr.io/ingress-nginx/kube-webhook-certgen:v1.1.1@sha256:64d8c73dca984af206adf9d6d7e46aa550362b1d7a01f3a0a91b20cc67868660"
          imagePullPolicy: IfNotPresent
          args:
            - create
            - --host=release-name-ingress-nginx-controller-admission,release-name-ingress-nginx-controller-admission.$(POD_NAMESPACE).svc
            - --namespace=$(POD_NAMESPACE)
            - --secret-name=release-name-ingress-nginx-admission
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          securityContext:
            allowPrivilegeEscalation: false
      restartPolicy: OnFailure
      serviceAccountName: release-name-ingress-nginx-admission
      nodeSelector: 
        kubernetes.io/os: linux
      securityContext:
        runAsNonRoot: true
        runAsUser: 2000
        fsGroup: 2000
---
# Source: ace/charts/ingress-nginx/templates/admission-webhooks/job-patch/job-patchWebhook.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: release-name-ingress-nginx-admission-patch
  namespace: default
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
  labels:
    helm.sh/chart: ingress-nginx-4.1.0
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.2.0"
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: admission-webhook
spec:
  template:
    metadata:
      name: release-name-ingress-nginx-admission-patch
      labels:
        helm.sh/chart: ingress-nginx-4.1.0
        app.kubernetes.io/name: ingress-nginx
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/version: "1.2.0"
        app.kubernetes.io/part-of: ingress-nginx
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: admission-webhook
    spec:
      containers:
        - name: patch
          image: "k8s.gcr.io/ingress-nginx/kube-webhook-certgen:v1.1.1@sha256:64d8c73dca984af206adf9d6d7e46aa550362b1d7a01f3a0a91b20cc67868660"
          imagePullPolicy: IfNotPresent
          args:
            - patch
            - --webhook-name=release-name-ingress-nginx-admission
            - --namespace=$(POD_NAMESPACE)
            - --patch-mutating=false
            - --secret-name=release-name-ingress-nginx-admission
            - --patch-failure-policy=Fail
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          securityContext:
            allowPrivilegeEscalation: false
      restartPolicy: OnFailure
      serviceAccountName: release-name-ingress-nginx-admission
      nodeSelector: 
        kubernetes.io/os: linux
      securityContext:
        runAsNonRoot: true
        runAsUser: 2000
        fsGroup: 2000
